#include <bits/stdc++.h>

using namespace std;

class SinglyLinkedListNode {
    public:
        int data;
        SinglyLinkedListNode *next;

        SinglyLinkedListNode(int node_data) {
            this->data = node_data;
            this->next = nullptr;
        }
};

class SinglyLinkedList {
    public:
        SinglyLinkedListNode *head;
        SinglyLinkedListNode *tail;
        int size;

        SinglyLinkedList() {
            this->head = nullptr;
            this->tail = nullptr;
            this->size = 0;
        }

        void insert_node(int node_data) {
            SinglyLinkedListNode* node = new SinglyLinkedListNode(node_data);

            if (!this->head) {
                this->head = node;
            } else {
                this->tail->next = node;
            }

            this->tail = node;
            this->size++;
        }

        void reverse()
        {
            if(this->size < 2)return;
            bool H = 1;
           
            SinglyLinkedListNode *Prev, *Cur, *Nxt;
            while(1)
            {
                if(H)
                {
                    Prev = this->head;
                    this->tail = Prev;
                    Cur = Prev->next;
                    H= 0;
                    Prev->next = nullptr;

                }
                if(!Cur->next)
                {
                    Cur->next=Prev;
                    this->head = Cur;
                    break;
                }

                 Nxt =Cur->next;
                
                Cur->next=Prev;
                
                Prev = Cur;
                Cur = Nxt;
                
              
            }
            
        }

   
};


 

 
void print_singly_linked_list(SinglyLinkedListNode* node, string sep) {
    while (node) {
        cout << node->data;

        node = node->next;

        if (node) {
            cout << sep;
        }
    }
}

void free_singly_linked_list(SinglyLinkedListNode* node) {
    while (node) {
        SinglyLinkedListNode* temp = node;
        node = node->next;

        free(temp);
    }
}


int main()
{
    
    for(int j =1;j<10;j++)
    {
     SinglyLinkedList* llist = new SinglyLinkedList();
    for(int i=1;i<=j;i++)llist->insert_node(i);
    print_singly_linked_list(llist->head, " ");
    cout<<endl;
    llist->reverse();
    print_singly_linked_list(llist->head, " ");

    cout<<endl;

    free_singly_linked_list(llist->head);
    free(llist);
    }
    
    return 0;
}


