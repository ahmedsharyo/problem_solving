#include<bits/stdc++.h>
#include <ext/numeric>
using namespace std;
using namespace __gnu_cxx;
typedef long long ll;
typedef unsigned long long ull;
const double PI = 3.14159265358979323846;
char alpha[26] = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
void fastInOut();
int dx[] = { 0, 1, -1,  0, -1, 1,-1, 1};
int dy[] = { 1, 0,  0, -1, -1, 1, 1,-1};
#define c first
#define i second
vector< vector<pair<ll,ll> > >adj((int)1e5+5);
ll parent[(int)1e5+5];
ll dist[(int)1e5+5];
bool ok=1;
void  djikstra(ll st,ll en)
{
    for(int i = 0 ; i < 1e5+4 ; i++ )dist[i]=1e12;
   set<pair<ll,ll> >s;
    pair<ll,ll>cur,tmp;
    s.insert({0,st});
    parent[st]=-1;
    dist[1]=0;
    while(!s.empty())
    {
        cur=*s.begin();
        s.erase(s.begin());
       if(cur.i==en)return ;
        for(auto i:adj[cur.i])
        {
            tmp={i.c+cur.c,i.i};
            if(dist[i.i]>i.c+cur.c){
            dist[i.i]=i.c+cur.c;
            parent[i.i]=cur.i;
            s.insert(tmp);
            }
        }
    }
   // return -1;
}

void pp(ll parent[],ll i)
{

    if(parent[i]==-1)
    {
        cout<<i<<" ";
        return ;
    }
    pp(parent,parent[i]);
    cout<<i<<" ";
}
int main()
{
//#ifndef ONLINE_JUDGE
//freopen("Bumble.in", "r", stdin);
//#endif
    fastInOut();
  ll n,m,v,u,c;
  cin>>n>>m;
  for(int i=0;i<m;i++)
  {
      cin>>u>>v>>c;
      adj[u].push_back({c,v});
      adj[v].push_back({c,u});
  }
//cout<<djikstra(1,n);
//return 0;
djikstra(1,n);
  if(dist[n]==1e12)cout<<-1;
  else
  {
      pp(parent,n);
  }
  return 0 ;
}
/*
5 6
1 2 2
2 5 5
1 4 1
3 4 3
3 5 1
3 2 2
*/

void fastInOut()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL), cout.tie(NULL);
}