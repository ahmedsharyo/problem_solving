const int dx[] = {1, -1, 0, 0};
const int dy[] = {0, 0, 1, -1};

bool vis[1001][1001];

int n, m;

bool valid(int x, int y)
{
    return x >= 0 && y >= 0 && x < n && y < m;
};
int bfs(int sx, int sy)
{

    queue<pair<int, int> > q;
    q.push({sx, sy});
    vis[sx][sy] = 1;
    int level = 0;
    while (!q.empty())
    {
        int sz = q.size();
        while (sz--)
        {
            int x = q.front().first;
            int y = q.front().second;
            q.pop();
            for (int i = 0; i < 4; ++i)
            {
                int nx = x + dx[i] ;
                int ny = y + dy[i] ;
                if ( (!valid(nx, ny) )|| vis[nx][ny])
                    continue;
                vis[nx][ny] = 1;
                q.push({nx, ny});
               
            }
        }
        ++level;
    }
    return -1;
}
