//min
vector<int>a[N];
bool cycle;
int vis[N];
stack<int>stk;

void dfs(int i)
{
	if(vis[i])
	{
      stack<int>tmp=stk;
      while(tmp.size())
      {
    	  if(tmp.top()==i)
    		  cycle=1;
    	  tmp.pop();
      }
		return;
	}
	vis[i]=1;
	stk.push(i);
	int sz=stk.size();
	for(auto j:a[i])
		{
		dfs(j);
		while((int)stk.size()>sz)stk.pop();
		}
	if(stk.size())stk.pop();

}

//optimal
bool cycle = false;

void dfs(int u){
	vis[u] = 1;
	for(int nxt : adj[u]){
		if(vis[nxt] == 1){
			cycle = true;
		}else if(vis[nxt] == 0){
			dfs(nxt);
		}
		if(cycle)return;
	}
	vis[u] = 2;
}